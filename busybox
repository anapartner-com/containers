# What is BusyBox? The Swiss Army Knife of Embedded Linux (on-disk size < 5MB)

# This is a good first step into understanding basic containers.

# References
# https://en.wikipedia.org/wiki/BusyBox
# https://busybox.net/
# https://github.com/docker-library/busybox
# https://hub.docker.com/_/busybox/tags
# https://github.com/docker-library/docs/tree/master/busybox

# BusyBox allows space-efficient distributions to configure a minimal Linux OS for embedded or IoT devices. 
# The same goes when you want to keep the size of your new container small.
# Example:  https://hub.docker.com/_/alpine   (<5MB) 
# podman run --name alpine -h alpine -it --rm alpine:latest sh -c 'hostname -f ; ip -4 a ; env ; ping localhost '


# The below lines are equivalent to start the busybox container.

podman run -it --rm busybox
podman run -u root --rm -it docker.io/library/busybox
podman run -u root --rm -it docker.io/library/busybox sh         [This will start the container and shell into it as well]



# Example to run a command - which showcases the value of a minimal size container.

podman run -u root --rm -it docker.io/library/busybox sh -c 'ls -lart /bin ; ls -lart'


# Note:  Why is --rm important?  We will have stale deployments left over with unique random Names.

podman ps -a   
CONTAINER ID  IMAGE                             COMMAND               CREATED             STATUS                         PORTS       NAMES
9bd97670a542  docker.io/library/busybox:latest  sh                    4 minutes ago       Exited (0) 4 minutes ago                   serene_bardeen
5277e7ca933b  docker.io/library/busybox:latest  sh                    4 minutes ago       Exited (0) 4 minutes ago                   nifty_tesla
ec18efad98da  docker.io/library/busybox:latest  sh                    3 minutes ago       Exited (0) 3 minutes ago                   hardcore_einstein
6961cdc780bc  docker.io/library/busybox:latest  --                    3 minutes ago       Created                                    beautiful_cerf
739aa191b221  docker.io/library/busybox:latest  -- bash               3 minutes ago       Created                                    frosty_napier
9ce523938516  docker.io/library/busybox:latest  bash                  3 minutes ago       Created                                    nifty_antonelli
010885c3c63b  docker.io/library/busybox:latest  sh                    3 minutes ago       Exited (0) 3 minutes ago                   unruffled_shannon
71dcc370aaea  docker.io/library/busybox:latest  sh -c ls -lart        2 minutes ago       Exited (0) 2 minutes ago                   elated_heyrovsky
ad7218bd9fa2  docker.io/library/busybox:latest  sh -c ls -lart /b...  About a minute ago  Exited (0) About a minute ago              affectionate_greider
cff203e8c929  docker.io/library/busybox:latest  sh -c ls -lart /b...  About a minute ago  Exited (0) About a minute ago              blissful_moser
9f864ee7e4eb  docker.io/library/busybox:latest  sh -c ls -lart /b...  About a minute ago  Exited (0) About a minute ago              blissful_driscoll
d37d6e01ccbd  docker.io/library/busybox:latest  sh -c ls -lart ; ...  About a minute ago  Exited (0) About a minute ago              nifty_davinci
a913f67a02a0  docker.io/library/busybox:latest  sh -c ls -lart /b...  30 seconds ago      Exited (0) 30 seconds ago                  interesting_hopper


# Clean up all running/stopped containers from your host OS.

podman rm -a -f


# Watch behavior without --rm    [Name is reserved - so a 2nd one is NOT allowed ]

podman run --name busybox_the_best -u root -it docker.io/library/busybox sh -c 'ls -lart'
podmap ps -a
podman run --name busybox_the_best -u root -it docker.io/library/busybox sh -c 'ls -lart'


# Behavior with background process (-d),  reserved name (--name) and reserved hostname (-h) [inside the container]
# Then we can exec an interactive (-it) session with the container to see what is running in this space.

podman run -d --name busybox_the_best -h busybox_the_best_hostname -u root -it docker.io/library/busybox
podman ps -a
podman exec -it busybox_the_best sh -c 'ls -lart; hostname'


# Important note: Busybox is one binary that acts as many.

podman run -u root --rm -it docker.io/library/busybox sh 
# Run these two (2) commands below to see the same inode value (first digit) is used for every binary listed under /bin
ls -i /bin
find /bin -inum $(ls -i /bin | tail -1 | cut -d' ' -f1)

OR run the below combined commands:

podman run -u root --rm -it docker.io/library/busybox sh -c 'ls -i /bin'
podman run -u root --rm -it docker.io/library/busybox sh -c "find /bin -inum \$(ls -i /bin | tail -1 | cut -d' ' -f1)"


# View help for busybox to see all possible commands already builtin.

 # busybox --help
BusyBox v1.36.1 (2023-12-19 17:45:51 UTC) multi-call binary.
BusyBox is copyrighted by many authors between 1998-2015.
Licensed under GPLv2. See source distribution for detailed
copyright notices.

Usage: busybox [function [arguments]...]
   or: busybox --list[-full]
   or: busybox --show SCRIPT
   or: busybox --install [-s] [DIR]
   or: function [arguments]...

        BusyBox is a multi-call binary that combines many common Unix
        utilities into a single executable.  Most people will create a
        link to busybox for each function they wish to use and BusyBox
        will act like whatever it was invoked as.

Currently defined functions:
        [, [[, acpid, add-shell, addgroup, adduser, adjtimex, ar, arch, arp, arping, ascii, ash, awk, base32, base64, basename, bc, beep, blkdiscard, blkid, blockdev, bootchartd, brctl,
        bunzip2, bzcat, bzip2, cal, cat, chat, chattr, chgrp, chmod, chown, chpasswd, chpst, chroot, chrt, chvt, cksum, clear, cmp, comm, conspy, cp, cpio, crc32, crond, crontab, cryptpw,
        cttyhack, cut, date, dc, dd, deallocvt, delgroup, deluser, depmod, devmem, df, dhcprelay, diff, dirname, dmesg, dnsd, dnsdomainname, dos2unix, dpkg, dpkg-deb, du, dumpkmap,
        dumpleases, echo, ed, egrep, eject, env, envdir, envuidgid, ether-wake, expand, expr, factor, fakeidentd, fallocate, false, fatattr, fbset, fbsplash, fdflush, fdformat, fdisk,
        fgconsole, fgrep, find, findfs, flock, fold, free, freeramdisk, fsck, fsck.minix, fsfreeze, fstrim, fsync, ftpd, ftpget, ftpput, fuser, getopt, getty, grep, groups, gunzip, gzip,
        halt, hd, hdparm, head, hexdump, hexedit, hostid, hostname, httpd, hush, hwclock, i2cdetect, i2cdump, i2cget, i2cset, i2ctransfer, id, ifconfig, ifdown, ifenslave, ifplugd, ifup,
        inetd, init, insmod, install, ionice, iostat, ip, ipaddr, ipcalc, ipcrm, ipcs, iplink, ipneigh, iproute, iprule, iptunnel, kbd_mode, kill, killall, killall5, klogd, last, less, link,
        linux32, linux64, linuxrc, ln, loadfont, loadkmap, logger, login, logname, logread, losetup, lpd, lpq, lpr, ls, lsattr, lsmod, lsof, lspci, lsscsi, lsusb, lzcat, lzma, lzop,
        makedevs, makemime, man, md5sum, mdev, mesg, microcom, mim, mkdir, mkdosfs, mke2fs, mkfifo, mkfs.ext2, mkfs.minix, mkfs.vfat, mknod, mkpasswd, mkswap, mktemp, modinfo, modprobe,
        more, mount, mountpoint, mpstat, mt, mv, nameif, nanddump, nandwrite, nbd-client, nc, netstat, nice, nl, nmeter, nohup, nologin, nproc, nsenter, nslookup, ntpd, od, openvt,
        partprobe, passwd, paste, patch, pgrep, pidof, ping, ping6, pipe_progress, pivot_root, pkill, pmap, popmaildir, poweroff, powertop, printenv, printf, ps, pscan, pstree, pwd, pwdx,
        raidautorun, rdate, rdev, readahead, readlink, readprofile, realpath, reboot, reformime, remove-shell, renice, reset, resize, resume, rev, rm, rmdir, rmmod, route, rpm, rpm2cpio,
        rtcwake, run-init, run-parts, runlevel, runsv, runsvdir, rx, script, scriptreplay, sed, seedrng, sendmail, seq, setarch, setconsole, setfattr, setfont, setkeycodes, setlogcons,
        setpriv, setserial, setsid, setuidgid, sh, sha1sum, sha256sum, sha3sum, sha512sum, showkey, shred, shuf, slattach, sleep, smemcap, softlimit, sort, split, ssl_client,
        start-stop-daemon, stat, strings, stty, su, sulogin, sum, sv, svc, svlogd, svok, swapoff, swapon, switch_root, sync, sysctl, syslogd, tac, tail, tar, taskset, tc, tcpsvd, tee,
        telnet, telnetd, test, tftp, tftpd, time, timeout, top, touch, tr, traceroute, traceroute6, tree, true, truncate, ts, tsort, tty, ttysize, tunctl, ubiattach, ubidetach, ubimkvol,
        ubirename, ubirmvol, ubirsvol, ubiupdatevol, udhcpc, udhcpc6, udhcpd, udpsvd, uevent, umount, uname, unexpand, uniq, unix2dos, unlink, unlzma, unshare, unxz, unzip, uptime, users,
        usleep, uudecode, uuencode, vconfig, vi, vlock, volname, w, wall, watch, watchdog, wc, wget, which, who, whoami, whois, xargs, xxd, xz, xzcat, yes, zcat, zcip


